name: Publish wheel on release

on:
    push:
      branches: [ "main" ]

jobs:
  build-and-release:
    name: Release
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install zip
        run: sudo apt-get install zip -y

      - name: Install poetry
        run: pipx install poetry

      - name: Build wheel
        run: poetry build -f wheel

      - name: Save build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.python-version }}
          path: dist/

  create-release:
    runs-on: ubuntu-latest
    needs: build-and-release
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist-all

      - name: Read version from pyproject.toml
        id: get_version
        run: |
          VERSION=$(grep '^version =' pyproject.toml | cut -d '"' -f2)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          name: Release v${{ steps.get_version.outputs.VERSION }}
          files: dist-all/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
